{"version":3,"sources":["node_modules/browser-pack/_prelude.js","test-js/animation/calcanimation.js","test-js/app.js","test-js/calccomputation/buttonpress.js","test-js/calccomputation/calcdisplay.js","test-js/calccomputation/evaluate.js","test-js/calccomputation/isoperator.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","//function adds and removes class to rotate the calculator\nmodule.exports =function(event){\n\t//references the element clicked, calcualtor-container ,and calculator-container classList\n\tvar mfcButton = event.target;\n\tvar calcContainer = document.querySelector(\".calculator-container\");\n\tvar calcClasses = document.querySelector(\".calculator-container\").classList;\n\t//determines whether the calculator has been rotated to the left\n\tif(calcClasses.contains(\"rotate-left\") === true){\n\t\tcalcClasses.remove(\"rotate-left\");\n\t\tcalcClasses.add(\"rotate-right\");\n\t\t//changes the inner html of the button clicked\n\t\tmfcButton.innerHTML = \"View Manufacturer Info\";\n\t\treturn;\n\t}\n\t//determines whether the calculator has been rotated to the right\n\tif(calcClasses.contains(\"rotate-left\")  === false){\n\t\t//determines whether the rotate-right class exists\n\t\tif(calcClasses.contains(\"rotate-right\")){\n\t\t\tcalcClasses.remove(\"rotate-right\");\n\t\t}\n\t\tcalcClasses.add(\"rotate-left\");\n\t\t//changes the inner html of the button clicked\n\t\tmfcButton.innerHTML = \"Go Back\";\n\t};\n}\n\n\t","var buttonpress = require('./calccomputation/buttonpress');\nvar rotatecalc = require('./animation/calcanimation');\n\n//buttonConatiner references the calculator button contianer\nvar buttonContainer = document.querySelector(\"#button-container\");\n//animateButton refernces the button which allows the user to rotate the container\nvar animateButton = document.querySelector(\"#mfc-btn\");\n\n//adds event listener to listen for users attempting to interact with calculator buttons\nbuttonContainer.addEventListener(\"click\",buttonpress,false);\n//adds event listener to listen for users attempting to rotate the calculator\nanimateButton.addEventListener(\"click\",rotatecalc,false);\n","var calc = require(\"./calcdisplay\");\nvar evaluate = require(\"./evaluate\");\n\n//function determines if a button from the calculator was pressed and the appropriate function to call\nmodule.exports = function (event){\n\t\tvar eventTag = event.target.tagName;\n\t\tvar target = event.target;\n\t\t//determines whether a button element was clicked\n\t\tif( eventTag === \"BUTTON\"){\n\t\t\tvar targetOutput =  target.innerHTML;\n\t\t\t//determines whether a clear button was clicked and then calls the clear function\n\t\t\tif(targetOutput === \"AC\" || targetOutput ===\"CE\"){\n\t\t\t\treturn calc.clear(targetOutput);\n\t\t\t}\n\t\t\t//if a button was clicked which was a number or operator then calls the display function\n\t\t\tcalc.display(targetOutput);\n\t\t}\n\t\t\n};","\nvar isOperator  = require('./isoperator');\nvar evaluate = require(\"./evaluate\");\n//creaes variable which references the calculator screen element\nvar calcScreen = document.querySelector(\"#calc-screen\");\n//outputArray holds the user-chosen numbers and operators as strings\nvar outputArray = [];\n\nmodule.exports.calcScreen = calcScreen;\n\n//display function identifies which button was clicked and how to change the calculator display and pass along user-chosen inputs to outputArray\nmodule.exports.display = function(output){\n\t//references the calculator screen inner-html\n\tvar calcScreenDisplay = calcScreen.innerHTML;\n\t//references the last element in the output array\n\tvar lastOutArrayElement = outputArray[outputArray.length -1];\n\n\t//determines whether the \"=\" operator was clicked and whether the calculator display contains a number\n\tif(output === \"=\" && !isNaN(parseFloat(calcScreenDisplay)) ){\n\t\t//pushed the calculator display balue to the outputArray, then calculates and displays the total\n\t\toutputArray.push(calcScreenDisplay);\n\t\tvar total = evaluate(outputArray);\n\t\tcalcScreen.innerHTML = total;\n\t\t//resets outputArray\n\t\toutputArray = [];\n\t\treturn;\n\t}\n\n\t//determines whether the user clicked operator and whether the calculator display contains a number\n\tif(isOperator(output) && !isNaN(isOperator(calcScreenDisplay)) ) {\n\t\t//determines whether the calculator screen inner html contains a number add the outputArray and display the number\n\t\tif( !isNaN(parseFloat(calcScreenDisplay)) ){\n\t\t\toutputArray.push(calcScreenDisplay);\n\t\t\tcalcScreen.innerHTML = output;\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t//determines whether the calculator screen is empty and  if the last element in the outputArray is a number\n\t\tif(calcScreenDisplay === \"\" && !isNaN(parseFloat(lastOutArrayElement)) ){\n\t\t\tcalcScreen.innerHTML = output;\n\t\t}\n\t}\n\n\t//determines whether the user chosen input is a \"%\" operator and whether the calcualtor and outputArray match the required criteria\n\tif(output === \"%\" && !isNaN(parseFloat(calcScreenDisplay)) && calcScreenDisplay.indexOf(\"%\") === -1 && isOperator(lastOutArrayElement) ){\n\t\tcalcScreen.innerHTML += output;\n\t\treturn;\n\t}\n\t//determines whether the user chosen input is a number or decimal point\n\tif( !isNaN(parseFloat(output)) || output === \".\"){\n\t\tvar conDec = calcScreenDisplay.indexOf(\".\");\n\t\t//determines whether the calculator screen inner html contains a decimal point\n\t\tif( output === \".\" && conDec !== -1){\n\t\t\treturn;\n\t\t}\n\n\t\t//determines whether the calculator screen inner html contains a operator\n\t\tif(isOperator(calcScreenDisplay)){\n\t\t\toutputArray.push(calcScreenDisplay);\n\t\t\tcalcScreen.innerHTML = \"\";\n\t\t}\n\n\t\t//determines whether the calculator screen and outputArray match the required criteria to add the number to the Calculator screen\n\t\tif( (calcScreen.innerHTML === \"\" || !isNaN(parseFloat(calcScreenDisplay)) || calcScreen.innerHTML === \".\" ) && (outputArray[0] === undefined || isOperator(outputArray[outputArray.length -1]) )  ) {\n\t\t\tcalcScreen.innerHTML += output; \n\n\t\t}\n\t\t\n\t}\n\n\n};\n\n//clear funciton identifies which type of button was clicked and how to interact with the out outputArray and calcScreen\nmodule.exports.clear = function(output){\n\t//determines whether the CE button was clicked and if true proceeds to clear the calculator screen inner html\n\tif(output === \"CE\" ){\n\t\tcalcScreen.innerHTML = \"\";\n\t\treturn;\n\t}\n\t//determines whether the AC button was clicked and if true proceeds to clear the calculator screen inner html and outputArray\n\tif(output === \"AC\"){\n\t\tcalcScreen.innerHTML = \"\";\n\t    outputArray = [];\n\n\t\t\n\t}\n};","\nvar isOperator = require(\"./isoperator\");\nvar calcScreen = require(\"./calcdisplay\").calcScreen;\n\n//calculates the value of the array after the user has clicked the equal operator\nmodule.exports = function(argArray){\n\t//creates array of operators\n\tvar opArray = argArray.filter(isOperator);\n\t//created array of user chosen numbers\n\tvar numbArray = argArray.filter(function(val){\n\t\tif(!isNaN(parseFloat(val)) ){\n\t\t\treturn true\n\t\t}; \n\t\treturn false; \n\t});\n\n\t//performs calcualtions using switch and casses\n\tvar total = numbArray.reduce(function(a,b){\n\t\t//access teh operator to identify which calculation needs to take place\n\t\tvar operator = opArray.shift();\n\t\t//determines if a number is a percentage and converts the number to a floating point number\n\t\tif (b.indexOf(\"%\") !== -1 ){\n\t\t\tb = a * (parseFloat(b) / 100) ;\n\t\t}\n\t\t//converts the text strings to Numbers\n\t\ta = parseFloat(a);\n\t\tb = parseFloat(b);\n\n\t\tswitch (operator){\n\t\t\tcase \"x\":\n\t\t\t\treturn a * b;\n\t\t\t\tbreak;\n\t\t\tcase \"/\":\n\t\t\t\treturn a/b;\n\t\t\t\tbreak;\n\t\t\tcase \"+\":\n\t\t\t\treturn a + b;\n\t\t\t\tbreak;\n\t\t\tcase \"-\":\n\t\t\t\treturn a - b;\n\n\t\t}\n\t});\n\t//returns the reduced total\n\treturn total;\n\n\n\n\n}","//determines whether the argument contains a operator\nmodule.exports = function(text){\n\tvar targetArray = [\"/\",\"x\",\"+\",\"-\"];\n\tif(targetArray.indexOf(text)!== -1){\n\t\treturn true;\n\t}\n\treturn false;\n};"]}